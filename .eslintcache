[{"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\index.js":"1","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\App.js":"2","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\About\\About.js":"3","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\SignUp\\SignUp.js":"4","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\Login\\Login.js":"5","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\HomePage\\Home.js":"6","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\firebase.js":"7","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\NavBar\\NavBar.js":"8","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\Profile\\Profile.js":"9","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\PostsPage\\postsPage.js":"10","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\PostsPage\\PostsPage.js":"11","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\PostsPage\\CreatePostPopup.js":"12"},{"size":141,"mtime":1639069026392,"results":"13","hashOfConfig":"14"},{"size":1600,"mtime":1645792039052,"results":"15","hashOfConfig":"14"},{"size":7317,"mtime":1650784185598,"results":"16","hashOfConfig":"14"},{"size":5568,"mtime":1650530310305,"results":"17","hashOfConfig":"14"},{"size":2346,"mtime":1640557510653,"results":"18","hashOfConfig":"14"},{"size":2574,"mtime":1643119098248,"results":"19","hashOfConfig":"14"},{"size":2174,"mtime":1650440541967,"results":"20","hashOfConfig":"14"},{"size":3681,"mtime":1650528945977,"results":"21","hashOfConfig":"14"},{"size":7560,"mtime":1653644289312,"results":"22","hashOfConfig":"14"},{"size":852,"mtime":1640633133241,"results":"23","hashOfConfig":"14"},{"size":5299,"mtime":1650963777284,"results":"24","hashOfConfig":"14"},{"size":7406,"mtime":1650963910203,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9rimcd",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\index.js",[],["56","57"],"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\App.js",[],"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\About\\About.js",["58"],"import React from 'react';\r\nimport './About.css';\r\nimport { Accordion } from 'react-bootstrap';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"White_background\">\r\n      <div id=\"Main_Title\" className=\"font-effect-shadow-multiple\">\r\n        <i id=\"Main_Title_Icon\" className=\"fas fa-info-circle\"></i> <b>About Us</b>\r\n      </div>\r\n      <p id=\"SubTitle\">\r\n        How it Works ?<br />\r\n        There is two sides: The Buyer side & The gift receiver side.\r\n      </p>\r\n\r\n      {/* <Accordion defaultActiveKey={['0']} alwaysOpen>\r\n        <Accordion.Item eventKey=\"0\">\r\n          <Accordion.Header>\r\n            {' '}\r\n            <b>The Buyer side</b>\r\n          </Accordion.Header>\r\n          <Accordion.Body>\r\n            Option for a personalized reminder before the celebration. • Saving many and despairing thoughts - Who among us has not encountered the\r\n            dilemma of what to buy for a friend who is celebrating soon? What is his / her taste and style? What size is his / her clothing item? •\r\n            Save time and fuel - Today most of us go to the mall to see the selection that the stores have to offer, hoping that out of the huge and\r\n            confusing selection that is there, we will find the gift that we think is right for those who are celebrating. • The end of unhelpful\r\n            consultations with other people - Usually when we go to the mall, we take someone else with us for counseling: spouse, parent, friend -\r\n            from now on we will do them a favor and let them rest. Order from the Internet - Today we are aware of the huge advantage of purchasing\r\n            from the Internet, without being limited in the selection of malls. In 'Present Simple', we simply order through the website / app and\r\n            receive the gift up to our house or the house of the person celebrating, professionally wrapped, and with a greeting card ready with a\r\n            personal dedication that can be written in advance on the website / app.\r\n            <img alt=\"Buying_Gift_Img\" src=\"./images/Buying_Gift.jpg\" id=\"Center_Photo\" />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header>\r\n            {' '}\r\n            <b>The gift receiver side</b>\r\n          </Accordion.Header>\r\n          <Accordion.Body>\r\n            For those who receive the gift, these are the following benefits:\r\n            <br />\r\n            <ul>\r\n              • The person celebrating will present to his friends:\r\n              <br />\r\n              <ul>\r\n                1. What is its exact size (XS, S, M, L, XL, XXL).\r\n                <br />\r\n                2. What is its taste and style. (Types of preferences for dodge: favorite colors, tight-fitting / loose clothing and more).\r\n                <br />\r\n                3. What are the favorite categories of the person celebrating (to target the person purchasing the gift):\r\n                <br />\r\n                Kitchen Products | Books | Gadgets | Clothing (Sporty / Elegant / Casual) | Consoles and Technology | Jewelry | Cultivation | Speakers\r\n                and audio | and lots of other categories.\r\n              </ul>\r\n              • Whoever celebrates will no longer receive unnecessary and unhelpful gifts that fail to excite him!\r\n              <br />\r\n              <ul>\r\n                1. Through the website / app, the person celebrating will save the trip to the store from which the gift was purchased, and he will no\r\n                longer have unnecessary credits left.\r\n                <br />\r\n                On the next birthday you will receive exactly the gifts you dreamed of - and even if you want to Maintain the surprise effect - you\r\n                will receive a gift from the favorite categories you have chosen!\r\n              </ul>\r\n            </ul>\r\n            <img alt=\"Receive_Gift_Img\" src=\"./images/Receive_Gift.jpg\" id=\"Center_Photo\" />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion> */}\r\n\r\n      <p>\r\n        <b>The Buyer side:</b>\r\n        <br />\r\n        Benefits of the gift buyer:\r\n        <ul>\r\n          • Option for a personalized reminder before the celebration. • Saving many and despairing thoughts - Who among us has not encountered the\r\n          dilemma of what to buy for a friend who is celebrating soon? What is his / her taste and style? What size is his / her clothing item? • Save\r\n          time and fuel - Today most of us go to the mall to see the selection that the stores have to offer, hoping that out of the huge and\r\n          confusing selection that is there, we will find the gift that we think is right for those who are celebrating. • The end of unhelpful\r\n          consultations with other people - Usually when we go to the mall, we take someone else with us for counseling: spouse, parent, friend - from\r\n          now on we will do them a favor and let them rest. Order from the Internet - Today we are aware of the huge advantage of purchasing from the\r\n          Internet, without being limited in the selection of malls. In 'Present Simple', we simply order through the website / app and receive the\r\n          gift up to our house or the house of the person celebrating, professionally wrapped, and with a greeting card ready with a personal\r\n          dedication that can be written in advance on the website / app.\r\n        </ul>\r\n        <img alt=\"Buying_Gift_Img\" src=\"./images/Buying_Gift.jpg\" id=\"Center_Photo\" />\r\n      </p>\r\n      <p>\r\n        <b>The gift receiver side:</b>\r\n        <br />\r\n        For those who receive the gift, these are the following benefits:\r\n        <br />\r\n        <ul>\r\n          • The person celebrating will present to his friends:\r\n          <br />\r\n          <ul>\r\n            1. What is its exact size (XS, S, M, L, XL, XXL).\r\n            <br />\r\n            2. What is its taste and style. (Types of preferences for dodge: favorite colors, tight-fitting / loose clothing and more).\r\n            <br />\r\n            3. What are the favorite categories of the person celebrating (to target the person purchasing the gift):\r\n            <br />\r\n            Kitchen Products | Books | Gadgets | Clothing (Sporty / Elegant / Casual) | Consoles and Technology | Jewelry | Cultivation | Speakers and\r\n            audio | and lots of other categories.\r\n          </ul>\r\n          • Whoever celebrates will no longer receive unnecessary and unhelpful gifts that fail to excite him!\r\n          <br />\r\n          <ul>\r\n            1. Through the website / app, the person celebrating will save the trip to the store from which the gift was purchased, and he will no\r\n            longer have unnecessary credits left.\r\n            <br />\r\n            On the next birthday you will receive exactly the gifts you dreamed of - and even if you want to Maintain the surprise effect - you will\r\n            receive a gift from the favorite categories you have chosen!\r\n          </ul>\r\n        </ul>\r\n        <img alt=\"Receive_Gift_Img\" src=\"./images/Receive_Gift.jpg\" id=\"Center_Photo\" />\r\n      </p>\r\n      <p id=\"copyright\">\r\n        Ⓒ Present <i className=\"far fa-arrow-alt-circle-right\"></i> Simple - Developed by Koren Cohen\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\SignUp\\SignUp.js",["59","60","61"],"// Font Awesome Source\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignature } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { useRef, useState } from 'react';\r\nimport './SignUp.css';\r\nimport { Form } from 'react-bootstrap';\r\nimport { signup, useAuth, db } from '../../../firebase';\r\nimport { collection, addDoc, setDoc, serverTimestamp, Timestamp, doc } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n  const [newName, setNewName] = useState('');\r\n  const [newDate, setNewDate] = useState('');\r\n  const [newEmail, setNewEmail] = useState('');\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const currentUser = useAuth();\r\n\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  //1.Sign up process by the func 'signup' (in 'firebase' file).\r\n  const handleSignup = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      createUser();\r\n    } catch {\r\n      alert('This email is already connected to an account !');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const createUser = async () => {\r\n    const auth = getAuth();\r\n    //2.The user object has basic properties such as display name, email, uid...\r\n    const user = auth.currentUser;\r\n    const uid = user.uid;\r\n    //2.2.Create a ref of the users list in the DB.\r\n    const usersListRef = doc(db, 'Users', uid);\r\n\r\n    //2.3.Create user func in firestore\r\n    await setDoc(usersListRef, {\r\n      fullName: newName,\r\n      dateOfBirth: Timestamp.fromDate(new Date(newDate)).toDate(),\r\n      createdAt: serverTimestamp(),\r\n      email: newEmail,\r\n      User_ID: uid,\r\n    })\r\n      .then(() => {\r\n        alert('User data added successfully!');\r\n      })\r\n      .catch((error) => {\r\n        alert('Unsuccessful operation, error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"White_background\">\r\n      <p id=\"Main_Title\" className=\"font-effect-shadow-multiple\">\r\n        <i id=\"Main_Title_Icon\" class=\"fas fa-user-plus\"></i>\r\n        <b>Registration</b>\r\n      </p>\r\n      <p id=\"Sub_title\">\r\n        Already have an account ? Log In<a href=\"/login\"> here</a>\r\n      </p>\r\n      .\r\n      <Form className=\"signUpForm\">\r\n        {/* <!--First name detail's--> */}\r\n        <p>\r\n          <FontAwesomeIcon icon={faSignature} />\r\n          <label> Full Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Israel israeli\"\r\n            id=\"NameField\"\r\n            onChange={(event) => {\r\n              setNewName(event.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n\r\n        {/* <!--Date of Birth detail's--> */}\r\n        <p>\r\n          <FontAwesomeIcon icon={faCalendarAlt} />\r\n          <label for=\"inputID_Number\"> Date of Birth:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            placeholder=\"Birthday\"\r\n            id=\"BirthdayField\"\r\n            onChange={(event) => {\r\n              setNewDate(event.target.value);\r\n            }}\r\n          />\r\n        </p>\r\n\r\n        {/* <!--Email detail's--> */}\r\n        <p>\r\n          <FontAwesomeIcon icon={faAt} />\r\n          <label for=\"exampleInputEmail1\"> Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"EmailField\"\r\n            aria-describedby=\"emailHelp\"\r\n            onChange={(event) => {\r\n              setNewEmail(event.target.value);\r\n            }}\r\n            placeholder=\"Enter email\"\r\n            ref={emailRef}\r\n            required\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </small>\r\n        </p>\r\n\r\n        {/* <!--Password detail's--> */}\r\n        <p>\r\n          <FontAwesomeIcon icon={faUnlockAlt} />\r\n          <label for=\"inputPassword\"> Password:</label>\r\n          <input type=\"password\" className=\"form-control\" placeholder=\"•••••••\" id=\"PasswordField\" ref={passwordRef} />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Must be at least 6 characters.\r\n          </small>\r\n        </p>\r\n\r\n        <p>\r\n          <FontAwesomeIcon icon={faUnlockAlt} />\r\n          <label for=\"inputPassword\"> Password Confirmation:</label>\r\n          <input type=\"password\" minlength=\"6\" className=\"form-control\" placeholder=\"•••••••\" />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Must be at least 6 characters.\r\n          </small>\r\n        </p>\r\n        <Link to=\"/about\">\r\n          {' '}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-primary btn-block\"\r\n            id=\"Submit\"\r\n            disabled={loading || currentUser}\r\n            onClick={() => {\r\n              handleSignup();\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Link>\r\n      </Form>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <p className=\"copyright\" id=\"copyright\">\r\n        Ⓒ Present <i className=\"far fa-arrow-alt-circle-right\"></i> Simple - Developed by Koren Cohen\r\n      </p>{' '}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\Login\\Login.js",[],"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\HomePage\\Home.js",[],"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\firebase.js",["62"],"import { useEffect, useState } from 'react';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, updateProfile } from 'firebase/auth';\r\nimport { getDownloadURL, getStorage, ref, uploadBytes } from 'firebase/storage';\r\nimport { getFirestore } from '@firebase/firestore';\r\n\r\n// My web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\nconst storage = getStorage();\r\nexport const db = getFirestore(app);\r\n\r\n//Sign up function using: createUserWithEmailAndPassword\r\nexport function signup(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\n//Login function using: signInWithEmailAndPassword\r\nexport function login(email, password) {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\n//Logout function using: signOut\r\nexport function logout() {\r\n  return signOut(auth);\r\n}\r\n\r\n// Custom Hook\r\nexport function useAuth() {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, (user) => setCurrentUser(user));\r\n    return unsub;\r\n  }, []);\r\n\r\n  return currentUser;\r\n}\r\n\r\n// Storage\r\nexport async function upload(file, currentUser, setLoading) {\r\n  const fileRef = ref(storage, currentUser.uid + '.png');\r\n\r\n  setLoading(true);\r\n\r\n  const snapshot = await uploadBytes(fileRef, file);\r\n  const photoURL = await getDownloadURL(fileRef);\r\n\r\n  updateProfile(currentUser, { photoURL });\r\n\r\n  setLoading(false);\r\n  alert('Uploaded file!');\r\n}\r\n","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\Profile\\Profile.js",["63","64","65","66","67","68","69","70"],"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\PostsPage\\postsPage.js",["71","72","73"],"C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\PostsPage\\PostsPage.js",["74","75","76","77","78"],"import { useState, useEffect } from 'react';\r\nimport { db } from '../../../firebase';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './PostsPage.css';\r\nimport { Row, Col, Container, Button } from 'react-bootstrap';\r\nimport CreatePostPopup from './CreatePostPopup';\r\nimport React from 'react';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst PostsPage = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [allPosts, setPosts] = useState([]);\r\n  //imports the 'Gifts-Posts-List' collection from the firestore db\r\n  const PostsCollectionRef = collection(db, 'Gifts-Posts-List');\r\n\r\n  useEffect(() => {\r\n    const getAllPosts = async () => {\r\n      const data = await getDocs(PostsCollectionRef);\r\n      setPosts(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n\r\n    getAllPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"NewPostPopupBtn\">\r\n        <Button variant=\"info btn-block\" onClick={() => setModalShow(true)}>\r\n          What is the next gift you would like to receive? Share Now\r\n        </Button>\r\n        {/* Popup dialog element: */}\r\n        <CreatePostPopup show={modalShow} onHide={() => setModalShow(false)} />\r\n      </div>\r\n\r\n      {/* Show all the posts list  */}\r\n      {allPosts.map((post) => {\r\n        return (\r\n          <div id=\"post-card\">\r\n            <div id=\"img-box\">\r\n              <img src=\"./images/Avatar.jpg\" width=\"200\" height=\"200\" />\r\n            </div>\r\n            <div id=\"form-box\">\r\n              {' '}\r\n              <h5 class=\"card-title\">\r\n                <b>Event: </b>\r\n                {post.Event_Type}\r\n              </h5>\r\n              <div id=\"form-row\">\r\n                {' '}\r\n                <b>Event Date: </b>\r\n                {moment(post.Event_Date.toDate()).format('ll')}\r\n              </div>\r\n              <div id=\"form-row\">\r\n                {' '}\r\n                <b>Gift Category: </b> {post.Gift_Category}\r\n              </div>\r\n              <div id=\"form-row\">\r\n                <b>Favorite Brand: </b>\r\n                {post.Favorite_Brand}\r\n              </div>\r\n              <div id=\"form-row\">\r\n                <b>Gift URL: </b>\r\n                {post.Gift_URL}\r\n              </div>\r\n              <div id=\"form-row\">\r\n                <b>Gift Discription: </b>\r\n                {post.Discription}\r\n              </div>\r\n              <div class=\"card-footer\">\r\n                <small class=\"text-muted\">Post created at: {moment(post.Created_At.toDate()).format('lll')}</small>\r\n              </div>\r\n            </div>\r\n            <div id=\"deleteBtn\">\r\n              <button type=\"button\" class=\"btn btn-outline-danger\" /*onClick={handleLogout}*/>\r\n                {/* !currentUser - means when the user connected */}\r\n                {/* currentUser - means when the user disconnected */}\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* <Container>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col id=\"PostCard\">\r\n            <div>\r\n              {/ Show all the posts list  /}\r\n              {allPosts.map((post) => {\r\n                return (\r\n                  <div className=\"post\" class=\"card border-primary mb-3 \">\r\n                    <div class=\"row g-0\">\r\n                      <div class=\"col-md-4\">\r\n                        <img src=\"./images/Avatar.jpg\" class=\"img-fluid rounded-start\" alt=\"...\" />\r\n                      </div>\r\n                      <div class=\"col-md-8\">\r\n                        <div class=\"card-body\">\r\n                          <FontAwesomeIcon icon={faTrashAlt} />{' '}\r\n                          <h5 class=\"card-title\">\r\n                            <b>{post.Event_Type}</b>\r\n                          </h5>\r\n                          <p class=\"card-text\">\r\n                            <b>Event Date: </b>\r\n                            {moment(post.Event_Date.toDate()).format('ll')}{' '}\r\n                          </p>\r\n                          <div>\r\n                            <b>Gift Category: </b> {post.Gift_Category}\r\n                          </div>\r\n                          <div>\r\n                            <b>Favorite Brand: </b>\r\n                            {post.Favorite_Brand}\r\n                          </div>\r\n                          <div>\r\n                            <b>Gift URL: </b>\r\n                            {post.Gift_URL}\r\n                          </div>\r\n                          <div>\r\n                            <b>Gift Discription: </b>\r\n                            {post.Discription}\r\n                          </div>\r\n                          <div class=\"card-footer\">\r\n                            <small class=\"text-muted\">Post created at: {moment(post.Created_At.toDate()).format('lll')}</small>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsPage;\r\n","C:\\Users\\Koren Cohen\\Desktop\\Software_Development_Studies\\React.js\\React-Present-Simple\\src\\components\\Pages\\PostsPage\\CreatePostPopup.js",["79"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport './PostsPage.css';\r\nimport { db } from '../../../firebase';\r\nimport { collection, addDoc, serverTimestamp, Timestamp } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nfunction CreatePostPopup(props) {\r\n  //   Input REFERENCES - useState\r\n  const [EventTypeBox, setNewEventType] = useState('');\r\n  const [EventDateBox, setNewEventDate] = useState('');\r\n  const [GiftCategoryBox, setNewGiftCategory] = useState('');\r\n  const [FavoriteBrandBox, setNewFavoriteBrand] = useState('');\r\n  const [GiftURLBox, setNewGiftURL] = useState('');\r\n  const [Text_AreaBox, setNewText_AreaID] = useState('');\r\n\r\n  //-------------------ADDING POST TO THE DATABASE-------------------//\r\n\r\n  //   Inputs\r\n  //   let EventTypeBox = document.getElementById('EventTypebox');\r\n  //   let EventDateBox = document.getElementById('EventDatebox');\r\n  //   let GiftCategoryBox = document.getElementById('GiftCategorybox');\r\n  //   let FavoriteBrandBox = document.getElementById('FavoriteBrandbox');\r\n  //   let GiftURLBox = document.getElementById('GiftURLbox');\r\n  //   let Text_AreaBox = document.getElementById('Text_AreaIDbox');\r\n\r\n  //-------------------ADDING DOCUMENT-------------------//\r\n\r\n  //Add Document - Auto ID\r\n  const auth = getAuth();\r\n  //2.The user object has basic properties such as display name, email, uid...\r\n  const user = auth.currentUser;\r\n  const uid = user.uid;\r\n  const email = user.email;\r\n\r\n  async function AddDocument_AutoID() {\r\n    var ref = collection(db, 'Gifts-Posts-List');\r\n\r\n    const docRef = await addDoc(ref, {\r\n      Created_At: serverTimestamp(),\r\n      Event_Type: EventTypeBox,\r\n      Event_Date: Timestamp.fromDate(new Date(EventDateBox)).toDate(),\r\n      Gift_Category: GiftCategoryBox,\r\n      Favorite_Brand: FavoriteBrandBox,\r\n      Gift_URL: GiftURLBox,\r\n      Discription: Text_AreaBox,\r\n      User_ID: uid,\r\n      Email: email,\r\n    })\r\n      .then(() => {\r\n        alert('Gift Post added successfully!');\r\n      })\r\n      .catch((error) => {\r\n        alert('Unsuccessful operation, error:', error);\r\n      });\r\n  }\r\n\r\n  //-------------------Return HTML-------------------//\r\n\r\n  return (\r\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Create New Gift Post</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h5>Fill The Following Fields:</h5>\r\n        <div>\r\n          <div>\r\n            <label>Event type:</label>\r\n            <select\r\n              id=\"EventTypebox\"\r\n              required\r\n              onChange={(event) => {\r\n                setNewEventType(event.target.value);\r\n              }}\r\n            >\r\n              <option selected>Choose category:</option>\r\n              <option value=\"Birthday\">Birthday</option>\r\n              <option value=\"Holiday\">Holiday</option>\r\n              <option value=\"Anniversary\">Anniversary</option>\r\n              <option value=\"Wedding\">Wedding</option>\r\n              <option value=\"Bar/Bat Mitzvah\">Bar/Bat Mitzvah</option>\r\n              <option value=\"Military enlistment\">Military enlistment</option>\r\n              <option value=\"Release from army\">Release from army</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label>Event date:</label>\r\n            <input\r\n              id=\"EventDatebox\"\r\n              type=\"date\"\r\n              required\r\n              onChange={(event) => {\r\n                setNewEventDate(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Gift Category:</label>\r\n            <select\r\n              id=\"GiftCategorybox\"\r\n              required\r\n              onChange={(event) => {\r\n                setNewGiftCategory(event.target.value);\r\n              }}\r\n            >\r\n              <optgroup label=\"Fashion\">\r\n                <option value=\"Fashion-Elegant\">Elegant</option>\r\n                <option value=\"Fashion-Casual\">Casual</option>\r\n                <option value=\"Fashion-Sporty\">Sporty</option>\r\n                <option value=\"Fashion-Other\">Fashion-Other</option>\r\n              </optgroup>\r\n\r\n              <optgroup label=\"Electronics\">\r\n                <option value=\"Electronics-Gadgets\">Gadgets</option>\r\n                <option value=\"Electronics-Video Games\">Video Games</option>\r\n                <option value=\"Electronics-Smartphones\">Smartphones</option>\r\n                <option value=\"Electronics-Other\">Electronics-Other</option>\r\n              </optgroup>\r\n\r\n              <optgroup label=\"Home Products\">\r\n                <option value=\"Home-Kitchen\">Kitchen</option>\r\n                <option value=\"Home-Furniture\">Furniture</option>\r\n                <option value=\"Home-Other\">Home-Other</option>\r\n              </optgroup>\r\n\r\n              <optgroup label=\"Other Categories\">\r\n                <option value=\"Other-Gift Card\">Gift Card</option>\r\n                <option value=\"Other-Jewelry\">Jewelry</option>\r\n                <option value=\"Other-Category\">Other-Category</option>\r\n              </optgroup>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label>Favorite brand:</label>\r\n            <input\r\n              id=\"FavoriteBrandbox\"\r\n              type=\"text\"\r\n              required\r\n              onChange={(event) => {\r\n                setNewFavoriteBrand(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Direct link to the gift site:</label>\r\n            <input\r\n              id=\"GiftURLbox\"\r\n              type=\"url\"\r\n              required\r\n              onChange={(event) => {\r\n                setNewGiftURL(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div class=\"input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">Description</span>\r\n            </div>\r\n            <textarea\r\n              id=\"Text_AreaIDbox\"\r\n              class=\"form-control\"\r\n              aria-label=\"With textarea\"\r\n              placeholder=\"Here is the place to add more details (Favorite figure, sizes, colors, product model/version and more...)\"\r\n              rows=\"5\"\r\n              cols=\"50\"\r\n              required\r\n              onChange={(event) => {\r\n                setNewText_AreaID(event.target.value);\r\n              }}\r\n            ></textarea>\r\n          </div>\r\n\r\n          {/* <textarea\r\n            id=\"Text_AreaIDbox\"\r\n            name=\"message\"\r\n            rows=\"5\"\r\n            cols=\"50\"\r\n            placeholder=\"Here is the place to add more details (Favorite figure, sizes, colors, product model/version and more...)\"\r\n            required\r\n            onChange={(event) => {\r\n              setNewText_AreaID(event.target.value);\r\n            }}\r\n          ></textarea> */}\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n          id=\"Submit\"\r\n          onClick={() => {\r\n            AddDocument_AutoID();\r\n          }}\r\n        >\r\n          Submit\r\n        </button>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreatePostPopup;\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":11,"column":10,"nodeType":"86","messageId":"87","endLine":11,"endColumn":20},{"ruleId":"84","severity":1,"message":"89","line":11,"column":22,"nodeType":"86","messageId":"87","endLine":11,"endColumn":28},{"ruleId":"84","severity":1,"message":"90","line":13,"column":10,"nodeType":"86","messageId":"87","endLine":13,"endColumn":13},{"ruleId":"84","severity":1,"message":"91","line":59,"column":9,"nodeType":"86","messageId":"87","endLine":59,"endColumn":17},{"ruleId":"84","severity":1,"message":"92","line":3,"column":20,"nodeType":"86","messageId":"87","endLine":3,"endColumn":29},{"ruleId":"84","severity":1,"message":"93","line":5,"column":19,"nodeType":"86","messageId":"87","endLine":5,"endColumn":32},{"ruleId":"84","severity":1,"message":"94","line":5,"column":34,"nodeType":"86","messageId":"87","endLine":5,"endColumn":44},{"ruleId":"84","severity":1,"message":"95","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":13},{"ruleId":"84","severity":1,"message":"96","line":6,"column":15,"nodeType":"86","messageId":"87","endLine":6,"endColumn":18},{"ruleId":"84","severity":1,"message":"97","line":6,"column":20,"nodeType":"86","messageId":"87","endLine":6,"endColumn":29},{"ruleId":"84","severity":1,"message":"98","line":8,"column":10,"nodeType":"86","messageId":"87","endLine":8,"endColumn":15},{"ruleId":"84","severity":1,"message":"99","line":17,"column":9,"nodeType":"86","messageId":"87","endLine":17,"endColumn":20},{"ruleId":"100","severity":2,"message":"101","line":6,"column":29,"nodeType":"86","endLine":6,"endColumn":37},{"ruleId":"100","severity":2,"message":"102","line":10,"column":3,"nodeType":"86","endLine":10,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":17,"column":6,"nodeType":"105","endLine":17,"endColumn":8,"suggestions":"106"},{"ruleId":"84","severity":1,"message":"95","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":13},{"ruleId":"84","severity":1,"message":"96","line":6,"column":15,"nodeType":"86","messageId":"87","endLine":6,"endColumn":18},{"ruleId":"84","severity":1,"message":"97","line":6,"column":20,"nodeType":"86","messageId":"87","endLine":6,"endColumn":29},{"ruleId":"103","severity":1,"message":"107","line":25,"column":6,"nodeType":"105","endLine":25,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":42,"column":15,"nodeType":"111","endLine":42,"endColumn":73},{"ruleId":"84","severity":1,"message":"112","line":40,"column":11,"nodeType":"86","messageId":"87","endLine":40,"endColumn":17},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'collection' is defined but never used.","'addDoc' is defined but never used.","'Nav' is defined but never used.","'snapshot' is assigned a value but never used.","'useEffect' is defined but never used.","'updateProfile' is defined but never used.","'deleteUser' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'useId' is defined but never used.","'displayName' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"postsPage\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"postsPage\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'usersCollectionRef'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'PostsCollectionRef'. Either include it or remove the dependency array.",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'docRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [usersCollectionRef]",{"range":"121","text":"122"},"Update the dependencies array to be: [PostsCollectionRef]",{"range":"123","text":"124"},[541,543],"[usersCollectionRef]",[967,969],"[PostsCollectionRef]"]